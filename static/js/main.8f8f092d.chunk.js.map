{"version":3,"sources":["theme.tsx","contexts.ts","hooks/useRequest.tsx","utils/emoji.ts","screens/MainScreen.tsx","screens/LoadingScreen.tsx","screens/AuthScreen.tsx","screens/SettingsScreen.tsx","screens/NotFoundScreen.tsx","recipes.ts","screens/EditRecipeScreen.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["theme","extendTheme","config","initialColorMode","useSystemColorMode","AuthContext","createContext","useAuth","useContext","RecipeContext","useRecipes","SlackResourceContext","useRequest","displayErrors","toast","useToast","token","authedFetch","path","a","params","body","URLSearchParams","fetch","method","headers","response","json","console","debug","ok","title","error","status","isClosable","emoji","EmojiConvertor","keywordToEmojiMaybe","keyword","replace_colons","keywordToEmojiStrict","candidate","replace_mode","allow_native","MainScreen","recipes","height","spacing","marginY","size","textAlign","textTransform","letterSpacing","Profile","minChildWidth","map","recipe","StatusButton","id","ResetDNDButton","ResetAllButton","flexGrow","Footer","profile","setProfile","dnd","setDnd","request","useState","isLoading","setIsLoading","handleRefresh","then","user","Promise","all","useEffect","status_emoji","snooze_enabled","status_text","fontSize","fontWeight","color","dayjs","unix","snooze_endtime","fromNow","onClick","emoji_name","name","minutes","text","num_minutes","dndRequest","endTime","minutesFromNowEpoch","JSON","stringify","status_expiration","requestIgnoreErrors","stat","dndResp","Math","round","Date","getTime","navigate","useNavigate","direction","paddingBottom","extend","relativeTime","LoadingScreen","AuthScreen","hasAuth","setToken","location","useLocation","from","state","pathname","to","replace","onSubmit","e","preventDefault","form","FormData","target","get","align","isRequired","type","autoComplete","spellCheck","justify","width","rightIcon","leftIcon","SettingsScreen","paddingTop","version","href","window","open","RevealTokenButton","colorScheme","visible","setVisible","toggle","navigator","clipboard","writeText","NotFoundScreen","DEFAULT_RECIPES","EditRecipeScreen","persistedRecipes","setPersistedRecipes","setRecipes","buildRemoveRecipe","filter","r","marginTop","marginRight","index","EditableRecipe","key","remove","updateRecipe","recipePatch","newRecipes","alignItems","border","borderColor","borderRadius","p","value","onChange","ev","pattern","parseInt","isNaN","undefined","onBlur","isChecked","marginLeft","RequireAuth","children","App","isLoaded","setIsLoaded","_setToken","_setRecipes","getMany","fetchedToken","fetchedRecipes","length","Provider","input","set","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","waiting","postMessage","createStandaloneToast","description","duration"],"mappings":"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","file":"static/js/main.8f8f092d.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\"\n\nexport const theme = extendTheme({\n  config: {\n    initialColorMode: \"light\",\n    useSystemColorMode: true,\n  },\n})\n","import { createContext, useContext } from \"react\"\nimport { Recipe } from \"./recipes\"\n\ntype AuthContextInterface = {\n  token: string\n  setToken: Function\n  hasAuth: boolean\n}\nexport const AuthContext = createContext({} as AuthContextInterface)\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport const RecipeContext = createContext(\n  {} as { recipes: Recipe[]; setRecipes: (recipes: Recipe[]) => void }\n)\nexport function useRecipes() {\n  return useContext(RecipeContext)\n}\n\ntype SlackResourceContextInterface = {\n  profile?: {\n    display_name: string\n    status_emoji: string\n    status_text: string\n  }\n  setProfile: Function\n  dnd?: {\n    snooze_enabled: boolean\n    snooze_endtime: number\n  }\n  setDnd: Function\n}\nexport const SlackResourceContext = createContext(\n  {} as SlackResourceContextInterface\n)\n","import { useContext } from \"react\"\nimport { useToast } from \"@chakra-ui/react\"\nimport { AuthContext } from \"../contexts\"\n\nexport function useRequest({ displayErrors = true } = {}) {\n  const toast = useToast()\n  const { token } = useContext(AuthContext)\n\n  // Is it dumb that every request is a POST? Yes\n  // Is it more dumb that Slack prevents using the authorization header in xhr\n  // requests because it's missing from their cors response headers and thus\n  // forces you to put the token in the form data body, preventing you from\n  // submitting json in request, and thus requiring all requests to now be\n  // POSTs? Yes\n  async function authedFetch(path: string, params = {}) {\n    const body = new URLSearchParams({ ...params, token })\n    const response = await fetch(`https://slack.com/api/${path}`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/x-www-form-urlencoded\" },\n      body,\n    })\n    const json = await response.json()\n    console.debug(path, params, json)\n    if (json.ok || !displayErrors) {\n      return json\n    } else {\n      toast({\n        title: json.error,\n        status: \"error\",\n        isClosable: true,\n      })\n    }\n  }\n  return authedFetch\n}\n","import EmojiConvertor from \"emoji-js\"\n\nconst emoji = new EmojiConvertor()\nemoji.replace_mode = \"unified\"\nemoji.allow_native = true\nexport function keywordToEmojiMaybe(keyword: string): string {\n  return emoji.replace_colons(keyword)\n}\n\nexport function keywordToEmojiStrict(keyword: string): string {\n  const candidate = emoji.replace_colons(keyword)\n  if (candidate === keyword) return \"\"\n  return candidate\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Heading,\n  HStack,\n  SimpleGrid,\n  Spacer,\n  Stack,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\"\nimport { RepeatIcon, SettingsIcon } from \"@chakra-ui/icons\"\nimport dayjs from \"dayjs\"\nimport relativeTime from \"dayjs/plugin/relativeTime\"\nimport { useRequest } from \"../hooks/useRequest\"\nimport { SlackResourceContext, useRecipes } from \"../contexts\"\nimport { Recipe } from \"../recipes\"\nimport { useNavigate } from \"react-router-dom\"\nimport { keywordToEmojiMaybe } from \"../utils/emoji\"\n\nexport function MainScreen() {\n  const { recipes } = useRecipes()\n  return (\n    <Container>\n      <Stack height=\"100vh\">\n        <Stack spacing={5}>\n          <Heading\n            marginY=\"1\"\n            size=\"md\"\n            textAlign=\"center\"\n            textTransform=\"uppercase\"\n            letterSpacing=\"widest\"\n          >\n            ✌️slackmngr\n          </Heading>\n          <Profile />\n          <Divider />\n          <SimpleGrid minChildWidth=\"10em\" spacing={5}>\n            {recipes.map((recipe) => (\n              <StatusButton key={recipe.id} {...recipe} />\n            ))}\n          </SimpleGrid>\n          <SimpleGrid minChildWidth=\"10em\" spacing={5}>\n            <ResetDNDButton />\n            <ResetAllButton />\n            <Box />\n          </SimpleGrid>\n        </Stack>\n        <Box flexGrow={1}></Box>\n        <Footer />\n      </Stack>\n    </Container>\n  )\n}\n\nfunction Profile() {\n  const { profile, setProfile, dnd, setDnd } = useContext(SlackResourceContext)\n  const request = useRequest()\n  const [isLoading, setIsLoading] = useState(false)\n\n  function handleRefresh() {\n    setIsLoading(true)\n    const profile = request(\"users.profile.get\").then((user) =>\n      setProfile(user.profile)\n    )\n    const dnd = request(\"dnd.info\").then((dnd) => setDnd(dnd))\n    Promise.all([profile, dnd]).then(() => setIsLoading(false))\n  }\n\n  useEffect(() => {\n    handleRefresh()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <HStack>\n      {profile && (\n        <Stack>\n          <Heading size=\"lg\">\n            {keywordToEmojiMaybe(profile.status_emoji)}{\" \"}\n            {dnd?.snooze_enabled && \"💤 \"}\n            {profile.status_text}\n          </Heading>\n          {dnd?.snooze_enabled && (\n            <Text\n              fontSize=\"xs\"\n              textTransform=\"uppercase\"\n              letterSpacing=\"wider\"\n              fontWeight=\"bold\"\n              color=\"gray.500\"\n            >\n              ends {dayjs.unix(dnd.snooze_endtime).fromNow()}\n            </Text>\n          )}\n        </Stack>\n      )}\n      <Spacer />\n      <Button isLoading={isLoading} onClick={handleRefresh}>\n        <RepeatIcon />\n      </Button>\n    </HStack>\n  )\n}\n\nfunction StatusButton({ emoji_name, name, minutes, text, dnd }: Recipe) {\n  const request = useRequest()\n  const toast = useToast()\n  const { setProfile, setDnd } = useContext(SlackResourceContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const emoji = keywordToEmojiMaybe(emoji_name)\n\n  async function handleClick() {\n    setIsLoading(true)\n\n    let endTime, dndRequest\n    if (dnd) {\n      dndRequest = await request(\"dnd.setSnooze\", { num_minutes: minutes })\n      if (!dndRequest) return setIsLoading(false)\n      endTime = dndRequest.snooze_endtime\n    } else {\n      endTime = minutesFromNowEpoch(minutes)\n    }\n\n    setDnd(dndRequest)\n    const status = await request(\"users.profile.set\", {\n      profile: JSON.stringify({\n        status_expiration: endTime,\n        status_emoji: emoji_name,\n        status_text: text,\n      }),\n    })\n    if (!status) return setIsLoading(false)\n\n    toast({\n      title: `${emoji} ${text}`,\n      status: \"success\",\n    })\n    setProfile(status.profile)\n    setIsLoading(false)\n  }\n\n  return (\n    <Button isLoading={isLoading} size=\"lg\" onClick={handleClick}>\n      {emoji} {name}\n    </Button>\n  )\n}\n\nfunction ResetAllButton() {\n  const request = useRequest()\n  const requestIgnoreErrors = useRequest({ displayErrors: false })\n  const toast = useToast()\n  const { setProfile, setDnd } = useContext(SlackResourceContext)\n  const [isLoading, setIsLoading] = useState(false)\n\n  async function handleClick() {\n    setIsLoading(true)\n    const dnd = requestIgnoreErrors(\"dnd.endSnooze\")\n    const stat = request(\"users.profile.set\", {\n      profile: JSON.stringify({\n        status_emoji: \"\",\n        status_text: \"\",\n      }),\n    })\n    const [{ profile, dndResp }] = await Promise.all([stat, dnd])\n    toast({ title: \"Status & DND cleared\", status: \"success\" })\n    setProfile(profile)\n    setDnd(dndResp)\n    setIsLoading(false)\n  }\n\n  return (\n    <Button isLoading={isLoading} size=\"lg\" onClick={handleClick}>\n      ❌ Reset\n    </Button>\n  )\n}\n\nfunction ResetDNDButton() {\n  const requestIgnoreErrors = useRequest({ displayErrors: false })\n  const toast = useToast()\n  const { setDnd } = useContext(SlackResourceContext)\n  const [isLoading, setIsLoading] = useState(false)\n\n  async function handleClick() {\n    setIsLoading(true)\n    const dndResp = await requestIgnoreErrors(\"dnd.endSnooze\")\n    toast({ title: \"DND cleared\", status: \"success\" })\n    setDnd(dndResp)\n    setIsLoading(false)\n  }\n\n  return (\n    <Button isLoading={isLoading} size=\"lg\" onClick={handleClick}>\n      ☀️ Clear DND\n    </Button>\n  )\n}\n\ndayjs.extend(relativeTime)\nfunction minutesFromNowEpoch(minutes: number): number {\n  const epochSeconds = Math.round(new Date().getTime() / 1000)\n  return epochSeconds + minutes * 60\n}\n\nfunction Footer() {\n  const navigate = useNavigate()\n  return (\n    <Stack direction=\"row\" paddingBottom={3}>\n      <Box flexGrow={1} />\n      <Button onClick={() => navigate(\"settings\")}>\n        <SettingsIcon />\n      </Button>\n    </Stack>\n  )\n}\n","import { Container, Spinner, VStack } from \"@chakra-ui/react\"\n\nexport function LoadingScreen() {\n  return (\n    <Container>\n      <VStack>\n        <Spinner />\n      </VStack>\n    </Container>\n  )\n}\n","import { useContext } from \"react\"\nimport {\n  Alert,\n  AlertIcon,\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  VStack,\n} from \"@chakra-ui/react\"\nimport { AuthContext } from \"../contexts\"\nimport { ArrowRightIcon, InfoIcon } from \"@chakra-ui/icons\"\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\"\n\nexport function AuthScreen() {\n  const { hasAuth, setToken } = useContext(AuthContext)\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  function handleSubmit(e: any) {\n    e.preventDefault()\n    const form = new FormData(e.target)\n    setToken(form.get(\"token\"))\n  }\n\n  if (hasAuth) {\n    const from = location.state?.from?.pathname || \"/\"\n    return <Navigate to={from} replace={true} />\n  }\n\n  return (\n    <Container>\n      <Stack>\n        <Heading>Auth</Heading>\n        <form onSubmit={handleSubmit}>\n          <VStack align=\"start\">\n            <Alert status=\"info\">\n              <AlertIcon /> You should add this app to your home screen before\n              logging in\n            </Alert>\n            <FormControl id=\"token\" isRequired>\n              <FormLabel>Slack API Token</FormLabel>\n              <Input\n                name=\"token\"\n                type=\"text\"\n                autoComplete=\"off\"\n                spellCheck=\"false\"\n              />\n              <FormHelperText>\n                Token must have access to the following scopes{\" \"}\n                <code>dnd:read</code>,<code>dnd:write</code>,\n                <code>users.profile:read</code>,<code>users.profile:write</code>\n              </FormHelperText>\n            </FormControl>\n            <Stack direction=\"row\" justify=\"space-between\" width=\"100%\">\n              <Button rightIcon={<ArrowRightIcon />} type=\"submit\">\n                Submit\n              </Button>\n              <Button\n                leftIcon={<InfoIcon />}\n                onClick={() => navigate(\"/settings\")}\n              >\n                About slackmngr\n              </Button>\n            </Stack>\n          </VStack>\n        </form>\n      </Stack>\n    </Container>\n  )\n}\n","import { useState } from \"react\"\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Heading,\n  Text,\n  useToast,\n  VStack,\n  HStack,\n} from \"@chakra-ui/react\"\nimport { useAuth } from \"../contexts\"\nimport {\n  ChevronLeftIcon,\n  EditIcon,\n  Search2Icon,\n  ViewIcon,\n  ViewOffIcon,\n  WarningTwoIcon,\n} from \"@chakra-ui/icons\"\nimport { useNavigate } from \"react-router-dom\"\nimport { version } from \"../../package.json\"\n\nexport function SettingsScreen() {\n  const { hasAuth, token, setToken } = useAuth()\n  const navigate = useNavigate()\n\n  return (\n    <Container>\n      <VStack paddingTop={3} spacing={5}>\n        <Button leftIcon={<ChevronLeftIcon />} onClick={() => navigate(-1)}>\n          Back\n        </Button>\n        <Heading>Settings</Heading>\n        <HStack>\n          <Text>v{version}</Text>\n          <Button size=\"xs\" href=\"https://github.com/sheck/slackmngr/blob/main/CHANGELOG.md#changelog\">\n            View Changelog\n          </Button>\n        </HStack>\n        <Box>\n          <Text>Slack Manager works best as a home screen app.</Text>\n          <Text>For iOS: Share &gt; Add to Home Screen.</Text>\n        </Box>\n        <Button\n          leftIcon={<Search2Icon />}\n          onClick={() =>\n            window.open(\"https://github.com/sheck/slackmngr\", \"_blank\")\n          }\n        >\n          View Source on Github\n        </Button>\n        {hasAuth && (\n          <>\n            <Divider />\n            <Button leftIcon={<EditIcon />} onClick={() => navigate(\"/edit\")}>\n              Edit Recipes\n            </Button>\n            <Divider />\n            <RevealTokenButton {...{ token }} />\n            <Button colorScheme=\"yellow\" leftIcon={<WarningTwoIcon />} onClick={() => setToken(\"\")}>\n              Clear Slack Token\n            </Button>\n          </>\n        )}\n      </VStack>\n    </Container>\n  )\n}\n\nfunction RevealTokenButton({ token }: { token: string }) {\n  const [visible, setVisible] = useState(false)\n  const toggle = () => setVisible(!visible)\n  const toast = useToast()\n\n  async function copyToClipboard() {\n    try {\n      await navigator.clipboard.writeText(token)\n      toast({\n        title: \"Token copied to clipboard\",\n        status: \"success\",\n      })\n    } catch (error) {\n      toast({\n        title: `Could not copy token. ${error}`,\n        status: \"error\",\n      })\n    }\n  }\n\n  if (visible) {\n    return (\n      <>\n        <Button leftIcon={<ViewOffIcon />} onClick={toggle}>\n          Hide Token\n        </Button>\n        <Text>{token}</Text>\n        <Button onClick={copyToClipboard}>Copy to clipboard</Button>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <Button leftIcon={<ViewIcon />} onClick={toggle}>\n          Show Token\n        </Button>\n      </>\n    )\n  }\n}\n","import { Button, Container, Heading, VStack } from \"@chakra-ui/react\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport function NotFoundScreen() {\n  const navigate = useNavigate()\n  return (\n    <Container>\n      <VStack>\n        <Heading>Not Found</Heading>\n        <Button onClick={() => navigate(\"/\")}>Back to main page</Button>\n      </VStack>\n    </Container>\n  )\n}\n","export type Recipe = {\n  id: string\n  name: string\n  emoji_name: string\n  text: string\n  minutes: number\n  dnd: boolean\n}\n\nexport function buildNewBlankRecipe() {\n  return {\n    id: `${new Date().getTime()}`,\n    name: \"New Recipe\",\n    emoji_name: \":wave:\",\n    text: \"My away text\",\n    minutes: 60,\n    dnd: true\n  }\n}\n\nexport const DEFAULT_RECIPES: Array<Recipe> = [\n  {\n    id: \"lunch\",\n    name: \"Lunch\",\n    emoji_name: \":fork_and_knife:\",\n    text: \"Out to lunch\",\n    minutes: 60,\n    dnd: true,\n  },\n  {\n    id: \"break\",\n    name: \"Break\",\n    emoji_name: \":coffee:\",\n    text: \"On a break\",\n    minutes: 30,\n    dnd: true,\n  },\n  {\n    id: \"out-of-office\",\n    name: \"Out of office\",\n    emoji_name: \":no_entry:\",\n    text: \"Out of office\",\n    minutes: 720,\n    dnd: true,\n  },\n  {\n    id: \"sick\",\n    name: \"Sick\",\n    emoji_name: \":face_with_thermometer:\",\n    text: \"Out sick\",\n    minutes: 720,\n    dnd: true,\n  },\n  {\n    id: \"relocating\",\n    name: \"Relocating\",\n    emoji_name: \":bus:\",\n    text: \"Relocating\",\n    minutes: 30,\n    dnd: false,\n  },\n  {\n    id: \"coffee-shop\",\n    name: \"Coffee shop\",\n    emoji_name: \":computer:\",\n    text: \"Working from coffee shop\",\n    minutes: 720,\n    dnd: false,\n  },\n]\n","import { AddIcon, ChevronLeftIcon, DeleteIcon } from \"@chakra-ui/icons\"\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Divider,\n  FormControl,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  useToast,\n  VStack,\n} from \"@chakra-ui/react\"\nimport { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useRecipes } from \"../contexts\"\nimport { buildNewBlankRecipe, DEFAULT_RECIPES, Recipe } from \"../recipes\"\nimport { keywordToEmojiStrict } from \"../utils/emoji\"\n\nexport function EditRecipeScreen() {\n  const navigate = useNavigate()\n  const { recipes: persistedRecipes, setRecipes: setPersistedRecipes } =\n    useRecipes()\n  const [recipes, setRecipes] = useState(persistedRecipes)\n  const toast = useToast()\n\n  const reset = () => {\n    setRecipes(DEFAULT_RECIPES)\n    setPersistedRecipes(DEFAULT_RECIPES)\n    toast({\n      title: \"Recipes reset to default\",\n      status: \"info\",\n    })\n  }\n  const submit = () => {\n    setPersistedRecipes(recipes)\n    navigate(\"/\")\n    toast({\n      title: \"Recipes updated\",\n      status: \"success\",\n    })\n  }\n  const buildRemoveRecipe = (recipe: Recipe) => () =>\n    setRecipes(recipes.filter((r) => r !== recipe))\n  const add = () => setRecipes([...recipes, buildNewBlankRecipe()])\n\n  return (\n    <Container>\n      <Stack marginTop={3} spacing={5}>\n        <Button\n          marginRight=\"auto\"\n          leftIcon={<ChevronLeftIcon />}\n          onClick={() => navigate(-1)}\n        >\n          Back\n        </Button>\n        <Heading>Edit Recipes</Heading>\n        {recipes.map((recipe, index) => (\n          <EditableRecipe\n            {...{\n              key: recipe.id,\n              remove: buildRemoveRecipe(recipe),\n              recipe,\n              index,\n              setRecipes,\n            }}\n          />\n        ))}\n        <Button leftIcon={<AddIcon />} colorScheme=\"blue\" onClick={add}>\n          Add New Recipe\n        </Button>\n        <Divider />\n        <HStack justify=\"space-between\">\n          <Button onClick={reset} colorScheme=\"red\">\n            Reset to Defaults\n          </Button>\n          <HStack>\n            <Button onClick={() => navigate(-1)}>Cancel</Button>\n            <Button onClick={submit} colorScheme=\"green\">\n              Submit\n            </Button>\n          </HStack>\n        </HStack>\n      </Stack>\n    </Container>\n  )\n}\n\nfunction updateRecipe(\n  setRecipes: React.Dispatch<React.SetStateAction<Recipe[]>>,\n  index: number,\n  recipePatch: Partial<Recipe>\n) {\n  setRecipes((recipes) => {\n    const newRecipes = [...recipes]\n    newRecipes[index] = { ...newRecipes[index], ...recipePatch }\n    return newRecipes\n  })\n}\n\nfunction EditableRecipe({\n  recipe,\n  setRecipes,\n  index,\n  remove,\n}: {\n  recipe: Recipe\n  setRecipes: React.Dispatch<React.SetStateAction<Recipe[]>>\n  index: number\n  remove: () => void\n}) {\n  const nameChange = (ev: React.ChangeEvent<HTMLInputElement>) =>\n    updateRecipe(setRecipes, index, { name: ev.target.value })\n  const emojiChange = (ev: React.ChangeEvent<HTMLInputElement>) =>\n    updateRecipe(setRecipes, index, { emoji_name: ev.target.value })\n  const textChange = (ev: React.ChangeEvent<HTMLInputElement>) =>\n    updateRecipe(setRecipes, index, { text: ev.target.value })\n  const minutesChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const minutes = parseInt(ev.target.value)\n    if (!isNaN(minutes)) {\n      updateRecipe(setRecipes, index, { minutes })\n    } else if (ev.target.value === \"\") {\n      updateRecipe(setRecipes, index, { minutes: undefined })\n    }\n  }\n  const ensureMinutesIsNumber = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const minutes = parseInt(ev.target.value)\n    if (isNaN(minutes)) updateRecipe(setRecipes, index, { minutes: 0 })\n  }\n  const dndChange = () => updateRecipe(setRecipes, index, { dnd: !recipe.dnd })\n  return (\n    <VStack\n      spacing={1}\n      alignItems=\"end\"\n      border=\"1px\"\n      borderColor=\"gray.300\"\n      borderRadius=\"md\"\n      p=\"5\"\n    >\n      <FormControl isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input value={recipe.name} onChange={nameChange} />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Emoji: {keywordToEmojiStrict(recipe.emoji_name)}</FormLabel>\n        <Input value={recipe.emoji_name} onChange={emojiChange} />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Status text</FormLabel>\n        <Input value={recipe.text} onChange={textChange} />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Number of minutes</FormLabel>\n        <Input\n          value={recipe.minutes}\n          pattern=\"[0-9]*\"\n          type=\"number\"\n          onChange={minutesChange}\n          onBlur={ensureMinutesIsNumber}\n        />\n      </FormControl>\n      <FormControl>\n        <Checkbox isChecked={recipe.dnd} onChange={dndChange}>\n          Set DND with status\n        </Checkbox>\n      </FormControl>\n      <Button\n        marginLeft=\"auto\"\n        leftIcon={<DeleteIcon />}\n        onClick={remove}\n        colorScheme=\"red\"\n      >\n        Remove\n      </Button>\n    </VStack>\n  )\n}\n","import { useEffect, useState } from \"react\"\n\nimport \"./App.css\"\n\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { theme } from \"./theme\"\nimport { getMany, set } from \"idb-keyval\"\nimport {\n  AuthContext,\n  RecipeContext,\n  SlackResourceContext,\n  useAuth,\n} from \"./contexts\"\n\nimport {\n  HashRouter,\n  Routes,\n  Route,\n  Navigate,\n  useLocation,\n} from \"react-router-dom\"\n\nimport { MainScreen } from \"./screens/MainScreen\"\nimport { LoadingScreen } from \"./screens/LoadingScreen\"\nimport { AuthScreen } from \"./screens/AuthScreen\"\nimport { SettingsScreen } from \"./screens/SettingsScreen\"\nimport { NotFoundScreen } from \"./screens/NotFoundScreen\"\nimport { EditRecipeScreen } from \"./screens/EditRecipeScreen\"\nimport { DEFAULT_RECIPES, Recipe } from \"./recipes\"\n\nfunction RequireAuth({ children }: { children: JSX.Element }) {\n  let { hasAuth } = useAuth()\n  let location = useLocation()\n\n  if (!hasAuth) {\n    return <Navigate to=\"/login\" state={{ from: location }} />\n  }\n\n  return children\n}\n\nexport default function App() {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [token, _setToken] = useState(\"\")\n  const [profile, setProfile] = useState()\n  const [dnd, setDnd] = useState()\n  const [recipes, _setRecipes] = useState([] as Recipe[])\n\n  useEffect(() => {\n    getMany([\"slackmngr.token\", \"slackmngr.recipes\"]).then(\n      ([fetchedToken, fetchedRecipes]) => {\n        let newRecipes = []\n        if (fetchedRecipes && fetchedRecipes.length > 0) {\n          newRecipes = fetchedRecipes\n        } else {\n          newRecipes = DEFAULT_RECIPES\n        }\n        _setToken(fetchedToken || \"\")\n        _setRecipes(newRecipes)\n        setIsLoaded(true)\n      }\n    )\n  }, [])\n\n  const hasAuth = token.length > 0\n  function setToken(input: string) {\n    set(\"slackmngr.token\", input)\n    _setToken(input)\n  }\n\n  function setRecipes(input: Recipe[] | ((recipes: Recipe[]) => Recipe[])) {\n    set(\"slackmngr.recipes\", input)\n    _setRecipes(input)\n  }\n\n  if (!isLoaded)\n    return (\n      <ChakraProvider theme={theme}>\n        <LoadingScreen />\n      </ChakraProvider>\n    )\n\n  return (\n    <ChakraProvider theme={theme}>\n      <AuthContext.Provider value={{ token, setToken, hasAuth }}>\n        <RecipeContext.Provider value={{ recipes, setRecipes }}>\n          <SlackResourceContext.Provider\n            value={{ profile, setProfile, dnd, setDnd }}\n          >\n            <HashRouter>\n              <Routes>\n                <Route\n                  path=\"/\"\n                  element={\n                    <RequireAuth>\n                      <MainScreen />\n                    </RequireAuth>\n                  }\n                />\n                <Route path=\"/login\" element={<AuthScreen />} />\n                <Route path=\"/settings\" element={<SettingsScreen />} />\n                <Route path=\"/edit\" element={<EditRecipeScreen />} />\n                <Route path=\"*\" element={<NotFoundScreen />} />\n              </Routes>\n            </HashRouter>\n          </SlackResourceContext.Provider>\n        </RecipeContext.Provider>\n      </AuthContext.Provider>\n    </ChakraProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { createStandaloneToast, ColorModeScript } from \"@chakra-ui/react\"\nimport { theme } from \"./theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register({\n  onUpdate: (registration) => {\n    if (registration && registration.waiting) {\n      registration.waiting.postMessage({ type: \"SKIP_WAITING\" })\n    }\n    window.location.reload()\n    const toast = createStandaloneToast()\n    toast({\n      title: \"App updated to latest version\",\n      description: (\n        <a href=\"https://github.com/sheck/slackmngr/blob/main/CHANGELOG.md#changelog\">\n          View Changelog\n        </a>\n      ),\n      status: \"success\",\n      duration: 7000,\n      isClosable: true,\n    })\n  },\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}